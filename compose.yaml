version: "3.8"

services:
  # Frontend services
  frontend1:
    image: aribakan/frontend-bankservice:latest
    networks:
      - frontend-network

  frontend2:
    image: aribakan/frontend-bankservice:latest
    networks:
      - frontend-network

  frontend3:
    image: aribakan/frontend-bankservice:latest
    networks:
      - frontend-network

  # Backend services
  backend1:
    image: aribakan/bank-service:latest
    environment:
      - DB_HOST=db
    depends_on:
      - db
    networks:
      - backend-network

  backend2:
    image: aribakan/bank-service:latest
    environment:
      - DB_HOST=db
    depends_on:
      - db
    networks:
      - backend-network

  backend3:
    image: aribakan/bank-service:latest
    environment:
      - DB_HOST=db
    depends_on:
      - db
    networks:
      - backend-network

  # Nginx for frontend load balancing
  nginx-frontend:
    image: nginx:latest
    ports:
      - "8070:80"
    volumes:
      - ./nginx-frontend.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend1
      - frontend2
      - frontend3
    networks:
      - frontend-network

  # Nginx for backend load balancing
  nginx-backend:
    image: nginx:latest
    ports:
      - "8090:8090"
    volumes:
      - ./nginx-backend.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend1
      - backend2
      - backend3
    networks:
      - backend-network

  db:
    image: mysql:latest
    container_name: db
    environment:
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=dbbankservice
      - MYSQL_USER=arina
      - MYSQL_PASSWORD=1234
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend-network

networks:
  frontend-network:
  backend-network:

volumes:
  mysql_data: